apiVersion: v1
kind: Namespace
metadata:
  name: log-analysis-app
---
apiVersion: v1
kind: Secret
metadata:
  name: mongodb-secret
  namespace: log-analysis-app
type: Opaque
data:
  username: YWRtaW4= # admin
  password: cGFzc3dvcmQ= # password
---
apiVersion: v1
kind: Secret
metadata:
  name: app-secret
  namespace: log-analysis-app
type: Opaque
data:
  jwt-secret: bG9nLWFuYWx5c2lzLWFwcC1zZWNyZXQta2V5 # log-analysis-app-secret-key
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodb-pvc
  namespace: log-analysis-app
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: elasticsearch-pvc
  namespace: log-analysis-app
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
  namespace: log-analysis-app
spec:
  selector:
    matchLabels:
      app: mongodb
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - image: mongo:latest
        name: mongodb
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: password
        ports:
        - containerPort: 27017
          name: mongodb
        volumeMounts:
        - name: mongodb-persistent-storage
          mountPath: /data/db
      volumes:
      - name: mongodb-persistent-storage
        persistentVolumeClaim:
          claimName: mongodb-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  namespace: log-analysis-app
spec:
  ports:
  - port: 27017
  selector:
    app: mongodb
  clusterIP: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: elasticsearch
  namespace: log-analysis-app
spec:
  selector:
    matchLabels:
      app: elasticsearch
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      containers:
      - image: docker.elastic.co/elasticsearch/elasticsearch:8.10.4
        name: elasticsearch
        env:
        - name: discovery.type
          value: single-node
        - name: ES_JAVA_OPTS
          value: -Xms512m -Xmx512m
        - name: xpack.security.enabled
          value: "false"
        ports:
        - containerPort: 9200
          name: es-http
        - containerPort: 9300
          name: es-transport
        volumeMounts:
        - name: elasticsearch-persistent-storage
          mountPath: /usr/share/elasticsearch/data
      volumes:
      - name: elasticsearch-persistent-storage
        persistentVolumeClaim:
          claimName: elasticsearch-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  namespace: log-analysis-app
spec:
  ports:
  - port: 9200
    name: http
  - port: 9300
    name: transport
  selector:
    app: elasticsearch
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: log-analysis-app
  namespace: log-analysis-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: log-analysis-app
  template:
    metadata:
      labels:
        app: log-analysis-app
    spec:
      containers:
      - name: log-analysis-app
        image: ${DOCKER_REGISTRY}/log-analysis-app:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5000
        env:
        - name: NODE_ENV
          value: production
        - name: PORT
          value: "5000"
        - name: MONGO_URI
          value: mongodb://$(MONGODB_USERNAME):$(MONGODB_PASSWORD)@mongodb:27017/log-analysis-app?authSource=admin
        - name: ELASTICSEARCH_NODE
          value: http://elasticsearch:9200
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: app-secret
              key: jwt-secret
        - name: JWT_EXPIRATION
          value: 24h
        - name: MONGODB_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: username
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: password
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 200m
            memory: 256Mi
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: log-analysis-app
  namespace: log-analysis-app
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 5000
  selector:
    app: log-analysis-app
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: log-analysis-app-ingress
  namespace: log-analysis-app
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  rules:
  - host: log-analysis.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: log-analysis-app
            port:
              number: 80
